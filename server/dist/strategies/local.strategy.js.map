{"version":3,"file":"local.strategy.js","names":["localStrategy","queryGetUserByUsername","client","AwesomeGraphQLClient","endpoint","settings","GRAPHCMS_CONTENT_API","fetch","fetchOptions","headers","Authorization","GRAPHCMS_ACCESS_TOKEN","passport","use","Strategy","usernameField","passwordField","username","password","done","request","authUser","HTTPError"],"sources":["../../src/strategies/local.strategy.js"],"sourcesContent":["import passport from 'passport';\nimport { Strategy } from 'passport-local';\nimport { AwesomeGraphQLClient } from 'awesome-graphql-client';\nimport fetch from 'node-fetch';\n\nimport settings from '../config/settings';\nimport { HTTPError } from '../utils';\n\nconst localStrategy = () => {\n  const queryGetUserByUsername = `\n    query getUserByUsername($username: String!) {\n      authUser(where: { username: $username }) {\n        id,\n        username,\n        email,\n        password\n      }\n    }\n  `;\n\n  const client = new AwesomeGraphQLClient({\n    endpoint: `${settings.GRAPHCMS_CONTENT_API}`,\n    fetch,\n    fetchOptions: {\n      headers: {\n        Authorization: `Bearer ${settings.GRAPHCMS_ACCESS_TOKEN}`,\n      },\n    },\n  });\n\n  passport.use('login', new Strategy(\n    {\n      usernameField: 'username',\n      passwordField: 'password',\n    },\n    async (username, password, done) => {\n      try {  \n        const { authUser } = await client.request(queryGetUserByUsername, { username });\n        if (!authUser) {\n          throw new HTTPError('User does no exists', 404);\n        }\n\n        if (password !== authUser.password) {\n          throw new HTTPError('Incorrect Credentials', 404);\n        }\n\n        done(null, authUser);\n      } catch (error) {\n        done(error);\n      }\n    },\n  ));\n};\n\nexport default localStrategy;\n"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAM;EAC1B,IAAMC,sBAAsB,gMAA5B;EAWA,IAAMC,MAAM,GAAG,IAAIC,0CAAJ,CAAyB;IACtCC,QAAQ,YAAKC,oBAAA,CAASC,oBAAd,CAD8B;IAEtCC,KAAK,EAALA,qBAFsC;IAGtCC,YAAY,EAAE;MACZC,OAAO,EAAE;QACPC,aAAa,mBAAYL,oBAAA,CAASM,qBAArB;MADN;IADG;EAHwB,CAAzB,CAAf;;EAUAC,oBAAA,CAASC,GAAT,CAAa,OAAb,EAAsB,IAAIC,uBAAJ,CACpB;IACEC,aAAa,EAAE,UADjB;IAEEC,aAAa,EAAE;EAFjB,CADoB;IAAA,yFAKpB,iBAAOC,QAAP,EAAiBC,QAAjB,EAA2BC,IAA3B;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAE+BjB,MAAM,CAACkB,OAAP,CAAenB,sBAAf,EAAuC;gBAAEgB,QAAQ,EAARA;cAAF,CAAvC,CAF/B;;YAAA;cAAA;cAEYI,QAFZ,yBAEYA,QAFZ;;cAAA,IAGSA,QAHT;gBAAA;gBAAA;cAAA;;cAAA,MAIY,IAAIC,gBAAJ,CAAc,qBAAd,EAAqC,GAArC,CAJZ;;YAAA;cAAA,MAOQJ,QAAQ,KAAKG,QAAQ,CAACH,QAP9B;gBAAA;gBAAA;cAAA;;cAAA,MAQY,IAAII,gBAAJ,CAAc,uBAAd,EAAuC,GAAvC,CARZ;;YAAA;cAWIH,IAAI,CAAC,IAAD,EAAOE,QAAP,CAAJ;cAXJ;cAAA;;YAAA;cAAA;cAAA;cAaIF,IAAI,aAAJ;;YAbJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CALoB;;IAAA;MAAA;IAAA;EAAA,IAAtB;AAsBD,CA5CD;;eA8CenB,a"}