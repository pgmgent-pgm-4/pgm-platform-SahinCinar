{"version":3,"file":"jwt.strategy.js","names":["jwtStrategy","passport","use","Strategy","secretOrKey","settings","JWT_SECRET","jwtFromRequest","ExtractJwt","fromExtractors","fromUrlQueryParameter","fromHeader","fromAuthHeaderAsBearerToken","token","done","Error","user"],"sources":["../../src/strategies/jwt.strategy.js"],"sourcesContent":["import passport from 'passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\n\nimport settings from '../config/settings';\n\nconst jwtStrategy = () => {\n  passport.use(new Strategy(\n    {\n      secretOrKey: settings.JWT_SECRET,\n      jwtFromRequest: ExtractJwt.fromExtractors([ExtractJwt.fromUrlQueryParameter(\"secret_token\"), ExtractJwt.fromHeader(\"secret_token\"), ExtractJwt.fromAuthHeaderAsBearerToken()]),\n    },\n    async (token, done) => {\n      try {\n        if (!token) {\n          throw new Error('Token does no exists');\n        }\n\n        if (!token.user) {\n          throw new Error('User is not present in the token');\n        }\n\n        done(null, token.user);\n      } catch (error) {\n        done(error);\n      }\n    },\n  ));\n};\n\nexport default jwtStrategy;\n"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;EACxBC,oBAAA,CAASC,GAAT,CAAa,IAAIC,qBAAJ,CACX;IACEC,WAAW,EAAEC,oBAAA,CAASC,UADxB;IAEEC,cAAc,EAAEC,uBAAA,CAAWC,cAAX,CAA0B,CAACD,uBAAA,CAAWE,qBAAX,CAAiC,cAAjC,CAAD,EAAmDF,uBAAA,CAAWG,UAAX,CAAsB,cAAtB,CAAnD,EAA0FH,uBAAA,CAAWI,2BAAX,EAA1F,CAA1B;EAFlB,CADW;IAAA,yFAKX,iBAAOC,KAAP,EAAcC,IAAd;MAAA;QAAA;UAAA;YAAA;cAAA;;cAAA,IAESD,KAFT;gBAAA;gBAAA;cAAA;;cAAA,MAGY,IAAIE,KAAJ,CAAU,sBAAV,CAHZ;;YAAA;cAAA,IAMSF,KAAK,CAACG,IANf;gBAAA;gBAAA;cAAA;;cAAA,MAOY,IAAID,KAAJ,CAAU,kCAAV,CAPZ;;YAAA;cAUID,IAAI,CAAC,IAAD,EAAOD,KAAK,CAACG,IAAb,CAAJ;cAVJ;cAAA;;YAAA;cAAA;cAAA;cAYIF,IAAI,aAAJ;;YAZJ;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CALW;;IAAA;MAAA;IAAA;EAAA,IAAb;AAqBD,CAtBD;;eAwBed,W"}